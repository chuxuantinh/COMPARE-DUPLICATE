var values = [
      {
        "id": "01",
        "effect": "Permit",
        "condition": " ( Resource.dept_id = 36 )"
      },
      {
        "id": "02",
        "effect": "Permit",
        "condition": " ( Resource.dept_id = 36 )"
      }
    ];

var valueArr = values.map(function(item){ return item.condition });
var isDuplicate = valueArr.some(function(item, idx){ 
    return valueArr.indexOf(item) != idx ;
});
console.log(isDuplicate);

//
const foundDuplicateName = values.find((nnn, index) =>{
   return values.find((x, ind)=> x.condition === nnn.condition && index !== ind )
    })
    
    console.log(foundDuplicateName.condition)
//

// Remove dư thừa
function removeDup(arrayOfObjects) {
  if (new Set(arrayOfObjects.map((v) => v.name)).size < arrayOfObjects.length) {
          const _set = new Set();
          const _data = arrayOfObjects;
          for (const i in _data) {
            _set.add(JSON.stringify(_data[i]));
          }
          return Array.from(_set).map((i) =>
            JSON.parse(i)
          );
        }
}

const res = removeDup(values)
console.log(res)

//

// Compare - order - None order
const array1 = [
      {
        "id": "01",
        "effect": "Permit",
        "condition": " ( Resource.dept_id = 36 )"
      },
      {
        "id": "02",
        "effect": "Permit",
        "condition": " ( Resource.dept_id = 36 )"
      }
    ];
const array2 = [
      {
        "id": "01",
        "effect": "Permit",
        "condition": " ( Resource.dept_id = 36 )"
      },
      {
        "id": "02",
        "effect": "Permit",
        "condition": " ( Resource.dept_id = 36 )"
      }
    ];

const arraysCompare = (a1, a2) => {
  if (a1.length !== a2.length) return false;
  const objectIteration = (object) => {
    const result = [];
    const objectReduce = (obj) => {
      for (let i in obj) {
        if (typeof obj[i] !== 'object') {
          result.push(`${i}${obj[i]}`);
        } else {
          objectReduce(obj[i]);
        }
      }
    };
    objectReduce(object);
    return result;
  };
  const reduceArray1 = a1.map(item => {
    if (typeof item !== 'object') return item;
    return objectIteration(item).join('');
  });
  const reduceArray2 = a2.map(item => {
    if (typeof item !== 'object') return item;
    return objectIteration(item).join('');
  });
  const compare =  reduceArray1.map(item => reduceArray2.includes(item));
  return compare.reduce((acc, item) => acc + Number(item)) === a1.length;
};

console.log(arraysCompare(array1, array2));

//



const objectsEqual = (o1, o2) => {
  let match = false
    if(typeof o1 === 'object' && Object.keys(o1).length > 0) {
     match = (Object.keys(o1).length === Object.keys(o2).length && Object.keys(o1).every(p => objectsEqual(o1[p], o2[p])))
    }else {
     match = (o1 === o2)
    }
 	return match
}

const arraysEqual = (a1, a2) => {
  let finalMatch = []
  let itemFound = []
  
  if(a1.length === a2.length) {
    finalMatch = []
    a1.forEach( i1 => {
      itemFound = []
      a2.forEach( i2 => { 
      	itemFound.push(objectsEqual(i1, i2)) 
      })
    	finalMatch.push(itemFound.some( i => i === true))  
    }) 
  } 
  return finalMatch.every(i => i === true)
}

const ar1 = [
  { id: 1, name: "Chu", data: { body: "Some text"}},
  { id: 2, name: "Tinh"}
]
const ar2 = [
  {name: "Tinh", id: 2},
  {name: "Chu", data: { body: "Some text"}, id: 1}
]


console.log("Match:",arraysEqual(ar1, ar2))

// check dep in object

var myObj1 = { "name":"John", "age":"45", "car":null, "friends":['anto', 'rex', 'selva'] }; 
var myObj2 = { "name":"John", "age":"30", "car":null }; 
for (let x in myObj1) { 
	var flag =0; 
	for (let y in myObj2) { 
		if(myObj2[y] == myObj1[x]){ 
			flag = 1; 
			break; 
		} 
		else { 
			flag = 0; 
		} 
	} 
	if(flag == 1){ 
		console.log("Matched value "+myObj1[x]); 
	} 
	else { 
		console.log("None matched value "+myObj1[x]); 
	} 
} 