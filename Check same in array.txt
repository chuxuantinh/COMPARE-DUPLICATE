var values = [
      {
        "id": "01",
        "effect": "Permit",
        "condition": " ( Resource.dept_id = 36 )"
      },
      {
        "id": "02",
        "effect": "Permit",
        "condition": " ( Resource.dept_id = 36 )"
      }
    ];

var valueArr = values.map(function(item){ return item.condition });
var isDuplicate = valueArr.some(function(item, idx){ 
    return valueArr.indexOf(item) != idx ;
});
console.log(isDuplicate);

//
const foundDuplicateName = values.find((nnn, index) =>{
   return values.find((x, ind)=> x.condition === nnn.condition && index !== ind )
    })
    
    console.log(foundDuplicateName.condition)
//

// Remove dư thừa
function removeDup(arrayOfObjects) {
  if (new Set(arrayOfObjects.map((v) => v.name)).size < arrayOfObjects.length) {
          const _set = new Set();
          const _data = arrayOfObjects;
          for (const i in _data) {
            _set.add(JSON.stringify(_data[i]));
          }
          return Array.from(_set).map((i) =>
            JSON.parse(i)
          );
        }
}

const res = removeDup(values)
console.log(res)

//

// Compare - order - None order
const array1 = [
      {
        "id": "01",
        "effect": "Permit",
        "condition": " ( Resource.dept_id = 36 )"
      },
      {
        "id": "02",
        "effect": "Permit",
        "condition": " ( Resource.dept_id = 36 )"
      }
    ];
const array2 = [
      {
        "id": "01",
        "effect": "Permit",
        "condition": " ( Resource.dept_id = 36 )"
      },
      {
        "id": "02",
        "effect": "Permit",
        "condition": " ( Resource.dept_id = 36 )"
      }
    ];

const arraysCompare = (a1, a2) => {
  if (a1.length !== a2.length) return false;
  const objectIteration = (object) => {
    const result = [];
    const objectReduce = (obj) => {
      for (let i in obj) {
        if (typeof obj[i] !== 'object') {
          result.push(`${i}${obj[i]}`);
        } else {
          objectReduce(obj[i]);
        }
      }
    };
    objectReduce(object);
    return result;
  };
  const reduceArray1 = a1.map(item => {
    if (typeof item !== 'object') return item;
    return objectIteration(item).join('');
  });
  const reduceArray2 = a2.map(item => {
    if (typeof item !== 'object') return item;
    return objectIteration(item).join('');
  });
  const compare =  reduceArray1.map(item => reduceArray2.includes(item));
  return compare.reduce((acc, item) => acc + Number(item)) === a1.length;
};

console.log(arraysCompare(array1, array2));